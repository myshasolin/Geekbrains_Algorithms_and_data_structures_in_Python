# 1. Определение количества различных подстрок с использованием хеш-функции. Пусть на вход функции дана строка.
# Требуется вернуть количество различных подстрок в этой строке.
# Примечания:
# * в сумму не включаем пустую строку и строку целиком;
# * без использования функций для вычисления хэша (hash(), sha1() или любой другой из модуля hashlib задача считается
# не решённой.

# типа варианта из les_9_task_1_2, только красиво и детально - пробегаем в циклах все подстройки, добавляя при этом
# в переменную-множество хэши каждой комбинации. Во множестве остаются только уникальные хэши
import hashlib


def number_of_substrings(s):
    ind = [_ for _ in range(len(s) + 1)]
    u_str, counter = set(), 1
    for x in ind:
        for y in ind[x:]:
            if x == y:
                continue
            elif x == min(ind) and y == max(ind):
                continue
            result = hashlib.sha1(s[x:y].encode("utf-8")).hexdigest()
            print(f'{counter:<5}индекс: {x}:{y:<5}подстрока: {s[x:y]:<10}\tхэш: {result:>15}')
            u_str.add(result)
            counter += 1
    print(f'\nколичество уникальных подстрок в строке: {len(u_str)}')


number_of_substrings(input('сюда строку: '))
